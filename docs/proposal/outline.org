#+STARTUP: showall
#+EXPORT_EXCLUDE_TAGS: noexport

* [[file:proposal.pdf][Proposal PDF file]]                                                :noexport:

* Motivation / context / preliminaries?

* Contributions
** Introduction to homotopy type theory
An introduction to the basics of homotopy type theory geared towards
computer scientists, since all current introductions are written in
mind with the mathematician without any knowledge of type
theory. Instead, we want to introduce the subject to the computer
scientist who has some experience programming in dependently typed
languages such as Agda or Coq. 

** Identify how HoTT can be interesting for programming

** Comparison of collapsibility and hProp
A comparison of Brady's concept of collapsible type families and the
definition of hProp from homotopy type theory. We will see which of
the optimisation techniques can be applied if we replace collapsible
with hProp.

** Comparison of hProp and Coq's Prop universe
In Coq, Prop serves several purposes. One of these is erasibility with
respect to extraction: all the terms that live in Prop are erased
during extraction.
